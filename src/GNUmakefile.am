
bin_PROGRAMS = ncdc
ncdc_SOURCES =\
	cc.c\
	commands.c\
	db.c\
	dl.c\
	fl_local.c\
	fl_util.c\
	notify.c\
	hub.c\
	listen.c\
	main.c\
	net.c\
	proto.c\
	tth.c\
	ui.c\
	ui_util.c\
	util.c\
	vars.c

auto_headers = $(ncdc_SOURCES:.c=.h)
noinst_HEADERS = doc.h ncdc.h ${auto_headers}
ncdc_CFLAGS = $(GLIB_CFLAGS) $(GIO_CFLAGS) $(LIBXML_CFLAGS) $(SQLITE_CFLAGS) `pkg-config --cflags --libs libnotify`
ncdc_LDADD = -lm $(NCURSES_LIBS) $(BZ2_LIBS) $(GLIB_LIBS) $(GIO_LIBS) $(LIBXML_LIBS) $(SQLITE_LIBS)

# only clean header files when makeheaders is installed
if USE_MH
MOSTLYCLEANFILES = $(auto_headers)
endif


# append -DGIT_VERSION, when enabled
if USE_GIT_VERSION
GIT_VERSION := $(shell sh -c 'git describe --abbrev=4 --dirty=-d | sed s/^v//')
ncdc_CFLAGS += -DGIT_VERSION=\"$(GIT_VERSION)\"
endif


# This trick seems to work only with GNU make. I have no idea how to do this in
# a portable way, other than writing a separate rule for each header file. :-(
${auto_headers}: %.h: %.c
if USE_MH
	$(AM_V_GEN)makeheaders $<
else
	@echo "WARNING: makeheaders not installed, not generating header file."
endif

${ncdc_OBJECTS}: ${auto_headers}

